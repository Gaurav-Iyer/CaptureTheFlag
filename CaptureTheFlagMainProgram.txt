'INITIAL STATE 16F887
ADC _BITS 8  
ADC _CLOCK 3  
ADC _SAMPLEUS 50  
LCD _DREG PORTD  
LCD _DBIT 4  
LCD _RSREG PORTD  
LCD _RSBIT 0  
LCD _EREG PORTD  
LCD _EBIT 2  
LCD _RWREG PORTD  
LCD _RWBIT 1  
LCD _BITS 4  
LCD _LINES 2  
LCD _COMMANDUS 2000  
LCD _DATAUS 50  


'TRIS STATEMENTS 
TRISA =  %00001000  
TRISB =  %00000000  
TRISC =  %00010000  
TRISD =  %00000000  

 
'IMPORTS  
include "modedefs.bas"  

 
'DECLARING PORT VARIABLES  
LED VAR PORTD.3  
TX VAR PORTC.6  
RX VAR PORTC.7  
LINE VAR PORTC.4   

 
'DECLARING EMPTY VARIABLES
X VAR WORD  
DIST VAR WORD  
FREQ VAR WORD  
INC VAR WORD  
keypressHandler var word  
V VAR WORD  

 
'ADCON    
ADCON1 = 0  

 
'ALL HAIL OUR GLORIOUS LEADER   

 
STARTUP:  
PORTB =  %00000000  
LCDOUT $FE, $0F 'BLINKING CURSOR  
PAUSE 500  
HIGH LED  
PAUSE 1000  
LOW LED  
PAUSE 1000  
HIGH LED  
PAUSE 1000  
LOW LED  

 
'MAIN CODE
MAIN:  
keyPressHandler = 0	 

'SETTING THE BASE VALUE OF A VARIABLE THAT WILL DEFINE WHETHER OR NOT YOU ARE HOLDING THE FLAG  

 
LCDOUT  $FE, 1, "YOU ARE IN MAIN"  
PAUSE 200  

 
ADCIN 3, X 	 'SETTING THE A/D CONVERTED OUTPUT FROM A3 AND STORING THE ANALOG VALUE IN X   



DIST = ((6787/(X-3))-4)/5   'LINEARIZE THE VOLTAGE OUTPUT FROM A3 AND GIVE A CENTIMETER DISTANCE 
  

'SEARCH FOR A SERIAL MESSAGE WITH PARITY "A" AND BAUDRATE 1200, THEN STORE THE DATA IN FREQ   
SERIN RX, T1200,5000, ERROR, ["A"], FREQ   


'THE BOT STARTS OFF BY GOING FORWARD  
PORTB =  %00001010  
    			
 
'THE BOT STOPS GOING FORWARD WHEN IT HITS A LINE (WHEN THE PHOTOTRANSISTOR PIN DROPS TO 0)
IF PORTC.4 = 0 THEN  
	GOTO SHUFFLE  
ELSE  
	GOTO MAIN  
ENDIF  
      

 
   
'BOOL:  
'PORTB = 0  
'IF DIST < 15 THEN   
'    GOTO SERCHECK     
'ELSE  
'GOTO MAIN  
'ENDIF  
'  
'SERCHECK:  
'  
'select case FREQ  
'         					
'	CASE 50  				
'		GOSUB FLAG  
'		
'	CASE 52    						
'    	GOSUB BASE    
'    
'  	CASE 55    
'	  	GOSUB BOT     
'    
'  	CASE ELSE    
'     	GOTO MAIN    
'                  
'END SELECT    
'   
'I WOULD HAVE USED THIS SUBROUTINE TO DIFFERENTIATE SERIAL SIGNALS WITH THE SAME PARITY BY CHECKING THE VALUE OF THEIR DATA  
'HOWEVER, SINCE THE PROJECT CHANGED IT IS NOT NECESSARY.  
 

'RECURSIVE SUBROUTINE FOR NAVIGATING AROUND PITS INTO CENTRE
SHUFFLE:
  
LCDOUT  $FE, 1	 					
LCDOUT  $FE,  $80, "SHUFFLE"				
   'THESE LCD STATEMENTS ALLOW OTHERS TO TELL WHERE IN THE PROGRAM THE BOT IS   

 
PORTB =  %00000101  
   'REVERSE FOR 1/2 SECOND   
PAUSE 500  

 
PORTB =  %00001001  					
   'SPIN FOR 1/2 SECOND   
PAUSE 500  
    
'THIS REPEATS UNTIL THE BOT HITS ANOTHER LINE
REPEAT	 						
	'THESE REPEATS ARE USED TO GET AROUND THE PIT   
       PORTB =  %00001010  
    
       INC = INC + 1  					
          'THE VARIABLE 'INC' WILL CONSTANTLY INCREASE WHILE THE BOT IS DRIVING FORWARD   

       LCDOUT  $FE,  $C0,  #INC				
       PAUSE 100  
	   
	   'IF THE BOT HAS GONE FORWARD FOR LONG ENOUGH WITHOUT HITTING A LINE   
       IF (INC > 200 ) AND LINE = 1 THEN  
	   
			'WHEN THE VALUE OF INC IS MORE THAN 200 THE BOT HAS GONE FORWARD FOR LONG ENOUGH WITHOUT HITTING ANYTHING  		
             BRANCH keypresshandler, [MIDDLE, BASERETURN]
			 
       ENDIF  
    
     
UNTIL LINE = 0

'STOP THE MOTORS						
PORTB =  %00000000	 				
INC = 0	 						
      
'START AGAIN
GOTO SHUFFLE  					
   
 
MIDDLE:  

LCDOUT  $FE, 1 , "GETTING INTO THE MIDDLE"  		
PAUSE 100   

'THIS IS HARDCODE TO NAVIGATE FROM THE ALLEYWAY TO THE MIDDLE.
PORTB =  %00000110 'SPIN CC SO THE BOT IS FACING THE MIDDLE  
    
PAUSE 500  

'GO FORWARD FOR TWO SECONDS TO ENTER THE MIDDLE
PORTB =  %00001010  				
PAUSE 2000   			
 
GOTO CAPTURE  
 

'SUBROUTING FOR CAPTURING FLAG 
CAPTURE:  			

LCDOUT  $FE , 1 , "SEARCHING FOR FLAG"    		
ADCIN 3, X  
DIST = ((6787/(X-3))-4)/5  

'DETECTING THE FLAG'S SERIAL SIGNAL 
SERIN RX, T1200,5000, ERROR, ["F"], FREQ  	
   
LCDOUT  $FE,  $C0,  #DIST 

'ONCE AN OBJECT IS DETECTED WITH A DISTANCE OF 30 AND A FREQUENCY OF 50, THEN IT IS A FLAG 
IF DIST < 30 AND FREQ = 50 THEN  
				
       LCDOUT  $FE, 1 , "FLAG AHEAD"  

       PAUSE 100  

       REPEAT  
			'HEAD FORWARD UNTIL YOU CAN CAPTURE THE FLAG (THE DISTANCE OF THE FLAG IS LESS THAN 10) 
			PORTB =  %00001010 				
                 
       UNTIL DIST <= 10  

       GOTO HOLD  
     
ELSE  
	'SPIN COUNTER CLOCKWISE UNTIL A BOT IS SPOTTED 
	PORTB =  %00001001 					
          
    GOTO CAPTURE    
                                                       
ENDIF  

 
'OPERATING SERVOS TO HOLD CAPTURED FLAG IN CLAW
HOLD:  

LCDOUT  $FE , 1 , "GOING TO HOLD BOT"  
PAUSE 100  

 
PORTB =  %00001010  
PAUSE 1000  

'CREATE A PULSE WIDTH MODULATED SIGNAL ON THE CCP1 PIN. THIS WILL ACTIVATE THE SERVO TO HOLD THE MOTOR   
HPWM 1 , 255, 50  					

'FLAG HAS BEEN CAPTURED
keyPressHandler = 1  
 
GOTO BASE  

'SIMILAR TO FLAG BUT USING SHUFFLE TO GET AROUND THE PIT AND GO BACK TO THE BASE  
BASE:  							 
 
LCDOUT  $FE , 1 ,"FLAG CAPTURED SEARCHING FOR BASE..."  
PAUSE 100  

 
ADCIN 3, X  
DIST = ((6787/(X-3))-4)/5  				

'DETECTING HOMEBASE BEACON
SERIN RX, T1200,5000, ERROR ["A"], FREQ  

 
IF DIST < 30 and FREQ= 50 THEN  
       LCDOUT  $FE , 1 , "BASE FOUND"  
       PAUSE 100  
       IF LINE = 0 THEN GOTO SHUFFLE  
       ELSE 
              PORTB =  %00001010   
                 'forward   
        
       ENDIF  


'FINAL SUBROUTING TO RETURN TO BASE AND STOP BOT
BASERETURN:
  						
   'FIXED MOVEMENT TO GET BACK TO BASE ONCE YOU ARE PAST THE ALLEYWAY AND PIT   
	PORTB =  %00000110 
	PAUSE 500  
	PORTB =  %00001010 
	PAUSE 2000 
	PORTB =  %00001001 
	PAUSE 1000 
	PORTB =  %00001010 
	PAUSE 1000 
	LCDOUT  $FE , 1 , "Mission Accomplished"
	PAUSE 100 
	
STOP 							
   



'TELLS THE PROGRAM THAT AN ERROR HAS OCCURED BECAUSE THE TIMEOUT PERIOD HAS ELAPSED AND THAT THE PROGRAM MAY NOW STOP   
ERROR:  						
PORTB =  %00000000  
LCDOUT  $FE, 1, "ERROR"  
PAUSE 100  
STOP  

 
 

